{"version":3,"sources":["hooks/use_force_update_on_url_change.ts","hooks/use_force_update.ts","services/router_service.ts","utils/joinify.ts","utils/logogramify.ts","utils/speech_synthesify.ts","utils/pinyinify.ts","components/loudspeaker_icon_component.tsx","components/word_card_component.tsx","components/word_cards_component.tsx","components/detailed_word_card_component.tsx","hooks/use_checkbox.ts","hooks/use_text_input.ts","utils/hashify.ts","components/filter_page_component/use_page_filter.ts","components/filter_page_component/use_filter_change_notifications.ts","components/filter_page_component/filter_bar.tsx","hooks/use_scroll_top_persistance.ts","components/filter_page_component/use_intuitive_filter_page_scrolling.ts","components/filter_page_component/filter_page_component.tsx","data/characters.ts","data/words.ts","hooks/use_router_initialization.ts","serviceWorker.ts","index.tsx","App.tsx"],"names":["useForceUpdateOnUrlChange","forceUpdate","React","useState","updateState","useCallback","useForceUpdate","useEffect","window","addEventListener","removeEventListener","routerService","firstPathParameter","hash","document","location","history","replaceState","undefined","this","performance","navigation","type","hasHash","pushState","navigateToHash","replace","dispatchEvent","Event","back","length","split","joinify","strings","concat","join","voice","logogramify","word","characters","map","c","logogram","pinyinify","pinyin","loadVoice","speechSynthesis","getVoices","reverse","find","v","lang","includes","onvoiceschanged","e","speechSynthesify","message","canSpeechSynthesify","utterance","SpeechSynthesisUtterance","speak","LoudspeakerIconComponent","props","className","onClick","focusable","xmlns","viewBox","d","WordCardComponent","hideMeaning","hidePinYin","meaning","id","WordsCardsComponent","words","onClickCard","Fragment","index","key","DetailedWordCardComponent","onSubCharacterClick","remarks","isMultiCharacterWord","joinedMeaning","joinedRemarks","renderWordDetails","useCheckbox","initialValue","checked","setChecked","onChange","event","target","useTextInput","value","setValue","hashify","input","toString","i","charCodeAt","usePageFilter","initialResults","meaningFilterValue","pinYinFilterValue","useExactPinYin","results","setResults","searchResults","searchTerm","toLowerCase","filter","normalize","candidate","character","resultsHash","JSON","stringify","useFilterChangeNotifications","resultsPayload","onResultsChanged","onHideMeaningChanged","onHidePinYinChanged","FilterBar","isBackButtonMode","meaningFilterTextInput","pinYinFilterTextInput","exactPinYinCheckbox","hidePinYinCheckbox","hideMeaningCheckbox","canResetFilters","navigateBack","disabled","placeholder","title","useScrollTopPersistance","shouldSetToSavedPosition","scrollTopRef","documentElement","scrollTop","current","saveScrollTop","useIntuitiveFilterPageScrolling","FilterPageComponent","hasDetailedWord","setHidePinYin","setHideMeaning","getWordById","wordFromResults","wordFromAllWords","Error","handleCardClick","getHash","getDetailedWordId","renderDetailedWord","rawCharacters","result","Object","entries","forEach","entry","buildCharacters","你","好","再","见","零","一","二","三","四","五","六","七","八","九","十","百","元","名","姓","什","么","呢","叫","人","大","夫","小","日","月","明","旦","夕","兔","狗","猫","马","火","木","山","石","水","雨","冰","雪","风","从","炎","林","出","岩","子","女","父","母","家","众","焱","晶","森","口","心","目","耳","手","回","不","老","平","高","长","门","间","王","主","后","玉","牛","羊","鸟","鱼","国","中","美","白","金","珀","淡","田","竹","冬","草","苗","吃","喝","瓜","果","油","呆","未","末","来","爸","妈","妹","住","保","休","闪","皿","刀","酉","点","半","身","体","星","海","洋","东","西","南","北","工","士","贝","蛙","龟","丑","巫","男","有","飞","去","天","云","光","气","雷","弓","网","球","足","朋","友","上","下","车","户","孙","生","安","灾","品","味","杏","茶","米","欠","言","吹","炊","信","仙","伙","佛","的","几","rawWords","characterIdentifier","buildWords","你好","再见","什么","一二三四","人人","大人","小人","大小","小狗","火山","冰山","山水","大雨","父母","父子","父女","母子","母女","子女","大众","森林","水晶","出众","回家","出口","火山口","不大不小","门口","家人","风雨","主人","大王","女王","王子","猫王","山羊","中国","美国","木瓜","水果","油田","水田","冬天","呆子","爸爸","妈妈","妹妹","闪人","水果刀","国家","国王","休火山","住家","保母","三点半","手心","身体","星星","海洋","东西南北","东西","小吃","大吃","好吃","工人","手工","女士","海马","海龟","女巫","男巫","去中国","有人","去美国","白天","天气","雷雨","雪人","足球","球门","朋友","网友","女朋友","男朋友","上车","下车","七上八下","上海","户口","孙女","孙子","生女","生男","安心","水灾","火灾","未来","来日","生日","回来","来回","品味","人品","口味","女人味","中国茶","大米","仙人","大伙","仙子","useRouterInitialization","isInitializedRef","initialize","Boolean","hostname","match","ReactDOM","render","values","sort","a","b","localeCompare","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f0c7177.chunk.js","sourcesContent":["import { useForceUpdate } from \"./use_force_update\";\nimport React from \"react\";\n\nexport const useForceUpdateOnUrlChange: () => void = () => {\n    const forceUpdate = useForceUpdate();\n    React.useEffect(() => {\n        window.addEventListener(\"popstate\", forceUpdate);\n        return () => window.removeEventListener(\"popstate\", forceUpdate);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n};\n","import { useCallback } from \"react\";\nimport React from \"react\";\n\nexport const useForceUpdate: () => () => void = () => {\n    const [, updateState] = React.useState();\n    const forceUpdate = useCallback(() => updateState({}), []);\n    return forceUpdate;\n};\n","class RouterService {\n    private readonly firstPathParameter: string = \"ezpzchinez\";\n\n    public initialize(): void {\n        const { hash } = document.location;\n        window.history.replaceState(undefined, \"\", `/${this.firstPathParameter}${hash}`);\n\n        if (performance.navigation.type !== 1 && this.hasHash()) {\n            // not reloading page and the page has a hash\n            // use case: send specific word to focus via url\n            // set the back state to the overview page\n            window.history.pushState(undefined, \"\", `/${this.firstPathParameter}`);\n            this.navigateToHash(hash.replace(\"#\", \"\"));\n        }\n    }\n\n    public navigateToHash(hash: string): void {\n        window.history.pushState(undefined, \"\", `/${this.firstPathParameter}#${hash}`);\n        window.dispatchEvent(new Event(\"popstate\"));\n    }\n\n    public navigateBack(): void {\n        window.history.back();\n    }\n\n    public hasHash(): boolean {\n        const partAfterHash = document.location.hash.replace(`#`, \"\");\n        return partAfterHash.length > 1;\n    }\n\n    public getHash(): string {\n        if (this.hasHash()) {\n            return document.location.hash.split(\"#\")[1];\n        }\n\n        return undefined;\n    }\n}\n\nexport const routerService = new RouterService();\n","export function joinify(strings: string | string[]): string {\r\n    return [].concat(strings).join(\", \");\r\n}\r\n","import { Word } from \"../data/structures/word\";\n\nexport const logogramify: (word: Word) => string = word => word.characters.map(c => c.logogram).join(\"\");\n","let voice: SpeechSynthesisVoice | undefined;\r\nfunction loadVoice(): void {\r\n    voice = speechSynthesis\r\n        .getVoices()\r\n        .reverse()\r\n        .find(v => v.lang.includes(\"zh\") && v.lang.includes(\"CN\"));\r\n}\r\nloadVoice();\r\nspeechSynthesis.onvoiceschanged = e => {\r\n    loadVoice();\r\n    speechSynthesis.onvoiceschanged = null;\r\n};\r\n\r\nexport const speechSynthesify: (message: string) => void = message => {\r\n    if (canSpeechSynthesify()) {\r\n        const utterance = new SpeechSynthesisUtterance(message);\r\n        utterance.voice = voice as SpeechSynthesisVoice;\r\n        speechSynthesis.speak(utterance);\r\n    }\r\n};\r\n\r\nexport const canSpeechSynthesify: () => boolean = () => {\r\n    return \"speechSynthesis\" in window && voice !== undefined;\r\n};\r\n","import { Word } from \"../data/structures/word\";\n\nexport const pinyinify: (word: Word) => string = word => word.characters.map(c => c.pinyin).join(\"\");\n","import * as React from \"react\";\r\n\r\nexport interface LoudspeakerIconComponentProps {\r\n    onClick: () => void;\r\n}\r\n\r\nexport function LoudspeakerIconComponent(props: LoudspeakerIconComponentProps): JSX.Element {\r\n    return (\r\n        <div className=\"loudspeaker\" onClick={props.onClick}>\r\n            <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\" />\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport { Word } from \"../data/structures/word\";\r\nimport { joinify } from \"../utils/joinify\";\r\nimport { logogramify } from \"../utils/logogramify\";\r\nimport { pinyinify } from \"../utils/pinyinify\";\r\n\r\nexport interface WordCardComponentProps extends Word {\r\n    onClick: (word: string) => void;\r\n    id: string;\r\n    hidePinYin: boolean;\r\n    hideMeaning: boolean;\r\n}\r\n\r\nexport function WordCardComponent(props: WordCardComponentProps): JSX.Element {\r\n    const { onClick, hideMeaning, hidePinYin, meaning } = props;\r\n\r\n    return (\r\n        <div\r\n            className=\"word\"\r\n            onClick={() => {\r\n                onClick(props.id);\r\n            }}\r\n        >\r\n            <div className=\"characters\">{logogramify(props)}</div>\r\n            {!hidePinYin && <div>{pinyinify(props)}</div>}\r\n            {!hideMeaning && <div className=\"word-meaning\">{joinify(meaning)}</div>}\r\n        </div>\r\n    );\r\n}\r\n","import { Word } from \"../data/structures/word\";\nimport React from \"react\";\nimport { WordCardComponent } from \"./word_card_component\";\n\nexport interface WordsCardsComponentProps {\n    words: Word[];\n    onClickCard: (id: string) => void;\n    hidePinYin: boolean;\n    hideMeaning: boolean;\n}\n\nexport const WordsCardsComponent: (props: WordsCardsComponentProps) => JSX.Element = props => {\n    const { words, onClickCard, hideMeaning, hidePinYin } = props;\n    return (\n        <React.Fragment>\n            {words.map((word, index) => (\n                <WordCardComponent\n                    id={word.id}\n                    onClick={onClickCard}\n                    {...word}\n                    key={word.id + index}\n                    hidePinYin={hidePinYin}\n                    hideMeaning={hideMeaning}\n                />\n            ))}\n        </React.Fragment>\n    );\n};\n","import * as React from \"react\";\r\nimport { Word } from \"../data/structures/word\";\r\nimport { joinify } from \"../utils/joinify\";\r\nimport { logogramify } from \"../utils/logogramify\";\r\nimport { pinyinify } from \"../utils/pinyinify\";\r\nimport { canSpeechSynthesify, speechSynthesify } from \"../utils/speech_synthesify\";\r\nimport { LoudspeakerIconComponent } from \"./loudspeaker_icon_component\";\r\nimport { WordsCardsComponent } from \"./word_cards_component\";\r\n\r\nexport interface DetailedWordCardComponentProps {\r\n    word: Word;\r\n    id: string;\r\n    onSubCharacterClick: (id: string) => void;\r\n}\r\n\r\nexport function DetailedWordCardComponent(props: DetailedWordCardComponentProps): JSX.Element {\r\n    const { word, onSubCharacterClick } = props;\r\n    const { characters, meaning, remarks } = word;\r\n    const logogram = logogramify(word);\r\n\r\n    function renderWordDetails(): JSX.Element {\r\n        const joinedMeaning = joinify(meaning);\r\n        const joinedRemarks = joinify(remarks);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"detailed-word-word\">{logogram}</div>\r\n                <div className=\"detailed-word-pinyin\">{pinyinify(word)}</div>\r\n                {joinedMeaning && (\r\n                    <div className=\"detailed-word-meaning\">\r\n                        <strong>Meaning: </strong>\r\n                        {joinedMeaning}\r\n                    </div>\r\n                )}\r\n                {joinedRemarks && (\r\n                    <div className=\"detailed-word-remarks\">\r\n                        <strong>Remarks: </strong>\r\n                        {joinedRemarks}\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    function isMultiCharacterWord(): boolean {\r\n        return characters.length > 1;\r\n    }\r\n\r\n    function renderCharactersInformation(): JSX.Element {\r\n        return (\r\n            <div className=\"words\">\r\n                <WordsCardsComponent\r\n                    hideMeaning={false}\r\n                    hidePinYin={false}\r\n                    onClickCard={onSubCharacterClick}\r\n                    words={word.characters.map(c => ({\r\n                        ...c,\r\n                        characters: [c]\r\n                    }))}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`word detailed ${isMultiCharacterWord() ? \"multi-character\" : \"\"}`}>\r\n                {canSpeechSynthesify() && (\r\n                    <LoudspeakerIconComponent\r\n                        onClick={() => {\r\n                            speechSynthesify(logogram);\r\n                        }}\r\n                    />\r\n                )}\r\n                {renderWordDetails()}\r\n            </div>\r\n            {isMultiCharacterWord() && renderCharactersInformation()}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport const useCheckbox: (\r\n    initialValue: boolean\r\n) => {\r\n    checked: boolean;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    type: string;\r\n    setChecked: (checked: boolean) => void;\r\n} = (initialValue: boolean) => {\r\n    const [checked, setChecked] = React.useState(initialValue);\r\n    return {\r\n        checked,\r\n        onChange: event => setChecked(event.target.checked),\r\n        type: \"checkbox\",\r\n        setChecked\r\n    };\r\n};\r\n","import * as React from \"react\";\r\n\r\nexport const useTextInput: (\r\n    initialValue: string\r\n) => {\r\n    value: string;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    type: string;\r\n    setValue: (value: string) => void;\r\n} = (initialValue: string) => {\r\n    const [value, setValue] = React.useState(initialValue);\r\n    return {\r\n        value,\r\n        onChange: event => setValue(event.target.value),\r\n        type: \"text\",\r\n        setValue\r\n    };\r\n};\r\n","export function hashify(input: string): string {\r\n    let hash = 0;\r\n    if (input.length === 0) {\r\n        return hash.toString();\r\n    }\r\n    for (let i = 0; i < input.length; i++) {\r\n        const char = input.charCodeAt(i);\r\n        hash = (hash << 5) - hash + char;\r\n        hash = hash & hash;\r\n    }\r\n    return hash.toString();\r\n}\r\n","import * as React from \"react\";\r\nimport { Word } from \"../../data/structures/word\";\r\nimport { hashify } from \"../../utils/hashify\";\r\n\r\nexport const usePageFilter: (\r\n    initialResults: Word[],\r\n    words: Word[],\r\n    meaningFilterValue: string,\r\n    pinYinFilterValue: string,\r\n    useExactPinYin: boolean\r\n) => { results: Word[]; resultsHash: string } = (\r\n    initialResults: Word[],\r\n    words: Word[],\r\n    meaningFilterValue: string,\r\n    pinYinFilterValue: string,\r\n    useExactPinYin: boolean\r\n) => {\r\n    const [results, setResults] = React.useState(initialResults);\r\n\r\n    function prepareMeaning(meaning: string[] | string): string {\r\n        return [].concat(meaning).join(\"\");\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let searchResults: Word[] = words;\r\n\r\n        if (meaningFilterValue) {\r\n            const searchTerm: string = meaningFilterValue.toLowerCase().replace(/ /g, \"\");\r\n\r\n            searchResults = searchResults.filter(word => {\r\n                const candidate: string = (prepareMeaning(word.meaning) || \"\")\r\n                    .toLowerCase()\r\n                    .replace(/ /g, \"\");\r\n                return candidate.includes(searchTerm);\r\n            });\r\n        }\r\n\r\n        if (pinYinFilterValue) {\r\n            const searchTerm: string = pinYinFilterValue\r\n                .replace(/ /g, \"\")\r\n                .toLowerCase()\r\n                .normalize(\"NFD\")\r\n                .replace(/[\\u0300-\\u036f]/g, \"\");\r\n\r\n            searchResults = searchResults.filter(word => {\r\n                const candidate: string = word.characters\r\n                    .map(character => character.pinyin)\r\n                    .join(\"\")\r\n                    .replace(/ /g, \"\")\r\n                    .normalize(\"NFD\")\r\n                    .replace(/[\\u0300-\\u036f]/g, \"\")\r\n                    .toLowerCase();\r\n                return useExactPinYin ? candidate === searchTerm : candidate.includes(searchTerm);\r\n            });\r\n        }\r\n\r\n        setResults(searchResults);\r\n    }, [results, useExactPinYin, meaningFilterValue, pinYinFilterValue, words]);\r\n    const resultsHash = hashify(JSON.stringify(results));\r\n    return { results, resultsHash };\r\n};\r\n","import React from \"react\";\nimport { Word } from \"../../data/structures/word\";\nimport { FilterBarProps } from \"./filter_bar\";\n\nexport const useFilterChangeNotifications: (\n    resultsPayload: {\n        results: Word[];\n        resultsHash: string;\n        onResultsChanged: FilterBarProps[\"onResultsChanged\"];\n    },\n    meaningPayload: {\n        checked: boolean;\n        onHideMeaningChanged: FilterBarProps[\"onHideMeaningChanged\"];\n    },\n    pinyinPayload: {\n        checked: boolean;\n        onHidePinYinChanged: FilterBarProps[\"onHidePinYinChanged\"];\n    }\n) => void = (resultsPayload, meaning, pinyin) => {\n    const { onResultsChanged, results, resultsHash } = resultsPayload;\n    React.useEffect(\n        () => {\n            onResultsChanged(results);\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        [resultsHash]\n    );\n    React.useEffect(\n        () => {\n            meaning.onHideMeaningChanged(meaning.checked);\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        [meaning.checked]\n    );\n    React.useEffect(\n        () => {\n            pinyin.onHidePinYinChanged(pinyin.checked);\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        [pinyin.checked]\n    );\n};\n","import * as React from \"react\";\nimport { Word } from \"../../data/structures/word\";\nimport { useCheckbox } from \"../../hooks/use_checkbox\";\nimport { useTextInput } from \"../../hooks/use_text_input\";\nimport { routerService } from \"../../services/router_service\";\nimport { usePageFilter } from \"./use_page_filter\";\nimport { useFilterChangeNotifications } from \"./use_filter_change_notifications\";\n\nexport interface FilterBarProps {\n    isBackButtonMode: boolean;\n    words: Word[];\n    onResultsChanged: (results: Word[]) => void;\n    onHidePinYinChanged: (checked: boolean) => void;\n    onHideMeaningChanged: (checked: boolean) => void;\n}\n\nexport function FilterBar(props: FilterBarProps): JSX.Element {\n    const { isBackButtonMode, words, onResultsChanged, onHideMeaningChanged, onHidePinYinChanged } = props;\n\n    const meaningFilterTextInput = useTextInput(\"\");\n    const pinYinFilterTextInput = useTextInput(\"\");\n    const exactPinYinCheckbox = useCheckbox(false);\n    const hidePinYinCheckbox = useCheckbox(false);\n    const hideMeaningCheckbox = useCheckbox(false);\n\n    const { results, resultsHash } = usePageFilter(\n        [],\n        words,\n        meaningFilterTextInput.value,\n        pinYinFilterTextInput.value,\n        exactPinYinCheckbox.checked\n    );\n\n    useFilterChangeNotifications(\n        { onResultsChanged, results, resultsHash },\n        { checked: hideMeaningCheckbox.checked, onHideMeaningChanged },\n        { checked: hidePinYinCheckbox.checked, onHidePinYinChanged }\n    );\n\n    function canResetFilters(): boolean {\n        return (\n            !!meaningFilterTextInput.value ||\n            !!pinYinFilterTextInput.value ||\n            !!exactPinYinCheckbox.checked ||\n            !!hideMeaningCheckbox.checked ||\n            !!hidePinYinCheckbox.checked\n        );\n    }\n\n    function resetFilters(): void {\n        if (canResetFilters()) {\n            meaningFilterTextInput.setValue(\"\");\n            pinYinFilterTextInput.setValue(\"\");\n            exactPinYinCheckbox.setChecked(false);\n            hidePinYinCheckbox.setChecked(false);\n            hideMeaningCheckbox.setChecked(false);\n        }\n    }\n\n    return (\n        <div className=\"filter-bar\">\n            <div className=\"filter-bar-content\">\n                {isBackButtonMode ? (\n                    <button onClick={routerService.navigateBack}>←</button>\n                ) : (\n                    <React.Fragment>\n                        {\n                            <button disabled={!canResetFilters()} onClick={resetFilters}>\n                                Reset filters\n                            </button>\n                        }\n                        <input\n                            placeholder=\"Filter by meaning\"\n                            onChange={meaningFilterTextInput.onChange}\n                            value={meaningFilterTextInput.value}\n                            type={meaningFilterTextInput.type}\n                        />\n                        <input\n                            placeholder=\"Filter by pin yin\"\n                            onChange={pinYinFilterTextInput.onChange}\n                            value={pinYinFilterTextInput.value}\n                            type={pinYinFilterTextInput.type}\n                        />\n                        <input\n                            checked={exactPinYinCheckbox.checked}\n                            type={exactPinYinCheckbox.type}\n                            onChange={exactPinYinCheckbox.onChange}\n                            title=\"Enable exact pinyin filtering. Ignores tones.\"\n                        />\n                        <input\n                            checked={hidePinYinCheckbox.checked}\n                            type={hidePinYinCheckbox.type}\n                            onChange={hidePinYinCheckbox.onChange}\n                            title=\"Hide pinyin\"\n                        />\n                        <input\n                            checked={hideMeaningCheckbox.checked}\n                            type={hideMeaningCheckbox.type}\n                            onChange={hideMeaningCheckbox.onChange}\n                            title=\"Hide meaning\"\n                        />\n                    </React.Fragment>\n                )}\n            </div>\n        </div>\n    );\n}\n","import * as React from \"react\";\n\nexport const useScrollTopPersistance: (\n    shouldSetToSavedPosition: boolean\n) => { saveScrollTop: () => void } = shouldSetToSavedPosition => {\n    const scrollTopRef: React.MutableRefObject<number> = React.useRef(0);\n\n    React.useLayoutEffect(() => {\n        if (shouldSetToSavedPosition) {\n            document.documentElement.scrollTop = scrollTopRef.current;\n        }\n    }, [shouldSetToSavedPosition]);\n\n    return {\n        saveScrollTop: () => {\n            scrollTopRef.current = document.documentElement.scrollTop;\n        }\n    };\n};\n","import * as React from \"react\";\nimport { useScrollTopPersistance } from \"../../hooks/use_scroll_top_persistance\";\n\nexport const useIntuitiveFilterPageScrolling: (\n    shouldSetToSavedPosition: boolean\n) => { saveScrollTop: () => void } = shouldSetToSavedPosition => {\n    React.useLayoutEffect(() => {\n        if (!shouldSetToSavedPosition) {\n            document.documentElement.scrollTop = 0;\n        }\n    }, [shouldSetToSavedPosition]);\n\n    return {\n        saveScrollTop: useScrollTopPersistance(shouldSetToSavedPosition).saveScrollTop\n    };\n};\n","import * as React from \"react\";\r\nimport { Word } from \"../../data/structures/word\";\r\nimport { useForceUpdateOnUrlChange } from \"../../hooks/use_force_update_on_url_change\";\r\nimport { routerService } from \"../../services/router_service\";\r\nimport { DetailedWordCardComponent } from \"../detailed_word_card_component\";\r\nimport { WordsCardsComponent } from \"../word_cards_component\";\r\nimport { FilterBar } from \"./filter_bar\";\r\nimport { useIntuitiveFilterPageScrolling } from \"./use_intuitive_filter_page_scrolling\";\r\n\r\nexport function FilterPageComponent(words: Word[]): JSX.Element {\r\n    useForceUpdateOnUrlChange();\r\n\r\n    const hasDetailedWord = routerService.hasHash();\r\n\r\n    const { saveScrollTop } = useIntuitiveFilterPageScrolling(!hasDetailedWord);\r\n\r\n    const [results, setResults] = React.useState(words);\r\n    const [hidePinYin, setHidePinYin] = React.useState(false);\r\n    const [hideMeaning, setHideMeaning] = React.useState(false);\r\n\r\n    function renderDetailedWord(): JSX.Element {\r\n        if (hasDetailedWord) {\r\n            const id = getDetailedWordId();\r\n            return (\r\n                <DetailedWordCardComponent\r\n                    word={getWordById(id)}\r\n                    id={id}\r\n                    onSubCharacterClick={handleCardClick}\r\n                />\r\n            );\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    function getWordById(id: string): Word {\r\n        // check if word is in the results because the set is smaller than all words\r\n        const wordFromResults = results.find(word => word.id === id);\r\n        if (wordFromResults) {\r\n            return wordFromResults;\r\n        } else {\r\n            // check if word is in set of all words\r\n            const wordFromAllWords = words.find(word => word.id === id);\r\n            if (wordFromAllWords) {\r\n                return wordFromAllWords;\r\n            } else {\r\n                throw new Error(`Word for id ${id} not found`);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleCardClick(id: string): void {\r\n        routerService.navigateToHash(id);\r\n    }\r\n\r\n    function getDetailedWordId(): string {\r\n        if (hasDetailedWord) {\r\n            return routerService.getHash();\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"filter-page\">\r\n                <FilterBar\r\n                    isBackButtonMode={hasDetailedWord}\r\n                    words={words}\r\n                    onResultsChanged={setResults}\r\n                    onHideMeaningChanged={setHideMeaning}\r\n                    onHidePinYinChanged={setHidePinYin}\r\n                />\r\n                <div className=\"words\">\r\n                    {hasDetailedWord ? (\r\n                        renderDetailedWord()\r\n                    ) : (\r\n                        <WordsCardsComponent\r\n                            onClickCard={id => {\r\n                                saveScrollTop();\r\n                                handleCardClick(id);\r\n                            }}\r\n                            words={results}\r\n                            hideMeaning={hideMeaning}\r\n                            hidePinYin={hidePinYin}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { Character } from \"./structures/character\";\r\nimport { hashify } from \"../utils/hashify\";\r\n\r\ntype RawCharactersObject = {\r\n    [propName: string]: Omit<Character, \"logogram\" | \"id\">;\r\n};\r\ntype CharacterObject = { [propName: string]: Character };\r\n\r\n// :{meaning:[''],pinyin:''},\r\n\r\nconst rawCharacters: RawCharactersObject = {\r\n    你: { meaning: \"you\", pinyin: \"nǐ\" },\r\n    好: { meaning: \"good\", pinyin: \"hǎo\" },\r\n    再: { pinyin: \"zài\", meaning: [\"again\", \"once more\"] },\r\n    见: { pinyin: \"jiàn\", meaning: [\"to meet\"] },\r\n    零: { meaning: \"0\", pinyin: \"líng\" },\r\n    一: { meaning: \"1\", pinyin: \"yī\" },\r\n    二: { meaning: \"2\", pinyin: \"èr\" },\r\n    三: { meaning: \"3\", pinyin: \"sān\" },\r\n    四: { meaning: \"4\", pinyin: \"sì\" },\r\n    五: { meaning: \"5\", pinyin: \"wǔ\" },\r\n    六: { meaning: \"6\", pinyin: \"liù\" },\r\n    七: { meaning: \"7\", pinyin: \"qī\" },\r\n    八: { meaning: \"8\", pinyin: \"bā\" },\r\n    九: { meaning: \"9\", pinyin: \"jiǔ\" },\r\n    十: { meaning: \"10\", pinyin: \"shí\" },\r\n    百: { meaning: \"100\", pinyin: \"bǎi\" },\r\n    元: { meaning: [\"yuan\", \"¥\"], pinyin: \"yuán\" },\r\n    名: { meaning: \"name\", pinyin: \"míng\" },\r\n    姓: {\r\n        meaning: [\"to be called (family-name)\", \"to be called (last-name)\"],\r\n        pinyin: \"xìng\"\r\n    },\r\n    什: { pinyin: \"shén\", meaning: \"what\" },\r\n    么: { pinyin: \"me\", meaning: \"suffix, used to form interrogative\" },\r\n    呢: {\r\n        pinyin: \"ne\",\r\n        remarks: \"Binding word used after answering a questions to direct the question to someone else\"\r\n    },\r\n    叫: { meaning: \"to be called\", pinyin: \"jiào\" },\r\n    人: { meaning: \"person\", pinyin: \"rén\" },\r\n    大: { meaning: [\"big\", \"large\", \"great\"], pinyin: \"dà\" },\r\n    夫: { meaning: [\"male adult\", \"husband\"], pinyin: \"fū\" },\r\n    小: { meaning: [\"small\", \"few\", \"young\"], pinyin: \"xiǎo\" },\r\n    日: { meaning: [\"sun\", \"day\"], pinyin: \"rì\" },\r\n    月: { meaning: [\"moon\", \"month\", \"monthly\"], pinyin: \"yuè\" },\r\n    明: {\r\n        meaning: [\"bright\", \"of clear meaning\", \"to understand\", \"wise\"],\r\n        pinyin: \"míng\"\r\n    },\r\n    旦: { meaning: [\"dawn\", \"morning\", \"daybreak\"], pinyin: \"dàn\" },\r\n    夕: { meaning: [\"dusk\", \"dawn\"], pinyin: \"xī\" },\r\n    兔: { meaning: [\"rabbit\"], pinyin: \"tù\" },\r\n    狗: { meaning: [\"dog\"], pinyin: \"gǒu\" },\r\n    猫: { meaning: [\"cat\"], pinyin: \"māo\" },\r\n    马: { meaning: [\"horse\"], pinyin: \"mǎ\" },\r\n    火: { meaning: [\"fire\", \"urgent\", \"ammunition\"], pinyin: \"huǒ\" },\r\n    木: {\r\n        meaning: [\"tree\", \"wood\", \"wooden\", \"coffin\", \"simple\"],\r\n        pinyin: \"mù\"\r\n    },\r\n    山: { meaning: [\"mountain\", \"hill\"], pinyin: \"shān\" },\r\n    石: { meaning: [\"stone\"], pinyin: \"shí\" },\r\n    水: { meaning: [\"water\", \"river\", \"liquid\", \"beverage\"], pinyin: \"shuǐ\" },\r\n    雨: { meaning: [\"rain\"], pinyin: \"yǔ\" },\r\n    冰: { meaning: [\"ice\"], pinyin: \"bīng\" },\r\n    雪: { meaning: [\"snow\", \"snowfall\"], pinyin: \"xuě\" },\r\n    风: { meaning: [\"wind\", \"news\"], pinyin: \"fēng\" },\r\n    从: { meaning: [\"from\"], pinyin: \"cóng\" },\r\n    炎: { meaning: [\"flame\", \"inflammation\"], pinyin: \"yán\" },\r\n    林: { meaning: [\"woods\", \"forest\"], pinyin: \"lín\" },\r\n    出: { meaning: [\"to go out\"], pinyin: \"chū\" },\r\n    岩: { meaning: [\"rock\", \"cliff\"], pinyin: \"yán\" },\r\n    子: {\r\n        meaning: [\"son\", \"child\", \"seed\", \"egg\"],\r\n        pinyin: \"zǐ\",\r\n        remarks: [\"Often pronounced with no tone as a suffix to emphasize smallness\"]\r\n    },\r\n    女: { meaning: [\"female\", \"woman\", \"daughter\"], pinyin: \"nǚ\" },\r\n    父: { meaning: [\"father\"], pinyin: \"fù\" },\r\n    母: {\r\n        meaning: [\"mother\", \"elderly female relative\", \"origin\"],\r\n        pinyin: \"mǔ\"\r\n    },\r\n    家: { meaning: [\"home\", \"family\"], pinyin: \"jiā\" },\r\n    众: { meaning: [\"crowd\", \"many\", \"numerous\"], pinyin: \"zhòng\" },\r\n    焱: { meaning: [\"flame\"], pinyin: \"yàn\" },\r\n    晶: { meaning: [\"crystal\"], pinyin: \"jīng\" },\r\n    森: { meaning: [\"forest\"], pinyin: \"sēn\" },\r\n    口: { meaning: [\"mouth\"], pinyin: \"kǒu\" },\r\n    心: { meaning: [\"heart\", \"mind\"], pinyin: \"xīn\" },\r\n    目: { meaning: [\"eye\"], pinyin: \"mù\" },\r\n    耳: { meaning: [\"ear\"], pinyin: \"ěr\" },\r\n    手: { meaning: [\"hand\"], pinyin: \"shǒu\" },\r\n    回: { meaning: [\"to circle\", \"to go back\"], pinyin: \"huí\" },\r\n    不: { meaning: [\"not\"], pinyin: \"bù\" },\r\n    老: { meaning: [\"old\", \"experienced\", \"always\"], pinyin: \"lǎo\" },\r\n    平: { meaning: [\"flat\", \"equal\", \"fair\"], pinyin: \"píng\" },\r\n    高: { meaning: [\"high\", \"tall\", \"above average\", \"loud\"], pinyin: \"gāo\" },\r\n    长: { meaning: [\"length\", \"long\", \"forever\", \"always\"], pinyin: \"cháng\" },\r\n    门: { meaning: [\"gate\", \"door\"], pinyin: \"mén\" },\r\n    间: { meaning: [\"between\", \"among\", \"room\"], pinyin: \"jiān\" },\r\n    王: {\r\n        meaning: [\"king\", \"monarch\"],\r\n        pinyin: \"wáng\",\r\n        remarks: 'Pronounced \"wàng\" it means \"to rule\" or \"to reign\"'\r\n    },\r\n    主: { meaning: [\"master\", \"owner\", \"host\"], pinyin: \"zhǔ\" },\r\n    后: {\r\n        meaning: [\"queen\", \"empress\", \"back\", \"behind\", \"after\", \"later\"],\r\n        pinyin: \"hòu\"\r\n    },\r\n    玉: { meaning: [\"jade\"], pinyin: \"yù\" },\r\n    牛: { meaning: [\"bull\", \"cow\", \"ox\"], pinyin: \"niú\" },\r\n    羊: { meaning: [\"sheep\"], pinyin: \"yáng\" },\r\n    鸟: { meaning: [\"bird\"], pinyin: \"niǎo\" },\r\n    鱼: { meaning: [\"fish\"], pinyin: \"yú\" },\r\n    国: { meaning: [\"country\", \"nation\", \"state\", \"national\"], pinyin: \"guó\" },\r\n    中: { meaning: [\"within\", \"among\", \"in\", \"middle\"], pinyin: \"zhōng\" },\r\n    美: { meaning: [\"beautiful\", \"very satisfactory\"], pinyin: \"měi\" },\r\n    白: { meaning: [\"white\", \"snowy\", \"pure\", \"bright\"], pinyin: \"bái\" },\r\n    金: {\r\n        meaning: [\"gold\", \"golden\", \"money\", \"highly respected\"],\r\n        pinyin: \"jīn\"\r\n    },\r\n    珀: { meaning: [\"amber\"], pinyin: \"pò\" },\r\n    淡: { meaning: [\"plain\", \"tasteless\", \"mild\"], pinyin: \"dàn\" },\r\n    田: { meaning: [\"field\", \"farm\"], pinyin: \"tián\" },\r\n    竹: { meaning: [\"bamboo\"], pinyin: \"zhú\" },\r\n    冬: { meaning: [\"winter\"], pinyin: \"dōng\" },\r\n    草: { meaning: [\"grass\", \"straw\", \"manuscript\"], pinyin: \"cǎo\" },\r\n    苗: { meaning: [\"sprout\", \"bud\"], pinyin: \"miáo\" },\r\n    吃: { meaning: [\"to eat\"], pinyin: \"chī\" },\r\n    喝: { meaning: [\"to drink\"], pinyin: \"hē\" },\r\n    瓜: { meaning: [\"melon\"], pinyin: \"guā\" },\r\n    果: { meaning: [\"fruit\", \"nut\"], pinyin: \"guǒ\" },\r\n    油: { meaning: [\"oil\", \"fat\", \"greasy\", \"oily\"], pinyin: \"yóu\" },\r\n    呆: { meaning: [\"foolish\", \"stupid\", \"idiot\"], pinyin: \"dāi\" },\r\n    未: { meaning: [\"not yet\"], pinyin: \"wèi\" },\r\n    末: { meaning: [\"final\", \"end\"], pinyin: \"mò\" },\r\n    来: { meaning: [\"to come\", \"to arrive\", \"ever since\"], pinyin: \"lái\" },\r\n    爸: { meaning: [\"father\", \"dad\"], pinyin: \"bà\" },\r\n    妈: { meaning: [\"mama\"], pinyin: \"mā\" },\r\n    妹: { meaning: [\"younger sister\"], pinyin: \"mèi\" },\r\n    住: { meaning: [\"to stay\", \"to stay\", \"to reside\"], pinyin: \"zhù\" },\r\n    保: { meaning: [\"to protect\", \"to defend\"], pinyin: \"bǎo\" },\r\n    休: { meaning: [\"to rest\"], pinyin: \"xiū\" },\r\n    闪: { meaning: [\"to dodge\"], pinyin: \"shǎn\" },\r\n    皿: { meaning: [\"dish\", \"vessel\"], pinyin: \"mǐn\" },\r\n    刀: { meaning: [\"knife\", \"blade\", \"(single-edged) sword\"], pinyin: \"dāo\" },\r\n    酉: { meaning: [\"vessel\"], pinyin: \"yǒu\" },\r\n    点: { meaning: [\"o'clock\", \"point\", \"dot\", \"drop\"], pinyin: \"diǎn\" },\r\n    半: { meaning: [\"half\", \"semi\", \"incomplete\"], pinyin: \"bàn\" },\r\n    身: { meaning: [\"body\", \"life\", \"personally\"], pinyin: \"shēn\" },\r\n    体: { meaning: [\"body\", \"form\", \"system\"], pinyin: \"tǐ\" },\r\n    星: { meaning: [\"star\", \"heavenly body\", \"satellite\"], pinyin: \"xīng\" },\r\n    海: { meaning: [\"ocean\", \"sea\"], pinyin: \"hǎi\" },\r\n    洋: { meaning: [\"ocean\", \"vast\", \"foreign\"], pinyin: \"yáng\" },\r\n    东: { meaning: [\"east\"], pinyin: \"dōng\" },\r\n    西: { meaning: [\"west\"], pinyin: \"xī\" },\r\n    南: { meaning: [\"south\"], pinyin: \"nán\" },\r\n    北: { meaning: [\"north\"], pinyin: \"běi\" },\r\n    工: { meaning: [\"work\", \"skill\", \"profession\"], pinyin: \"gōng\" },\r\n    士: { meaning: [\"scholar\"], pinyin: \"shì\" },\r\n    贝: { meaning: [\"cowrie\", \"shellfish\"], pinyin: \"bèi\" },\r\n    蛙: { meaning: [\"frog\"], pinyin: \"wā\" },\r\n    龟: { meaning: [\"turtle\", \"tortoise\"], pinyin: \"guī\" },\r\n    丑: {\r\n        meaning: [\"clown\", \"shameful\", \"ugly\", \"disgraceful\"],\r\n        pinyin: \"chǒu\"\r\n    },\r\n    巫: { meaning: [\"witch\", \"wizard\", \"shaman\"], pinyin: \"wū\" },\r\n    男: { meaning: [\"male\"], pinyin: \"nán\" },\r\n    有: { meaning: [\"to have\", \"there is\"], pinyin: \"yǒu\" },\r\n    飞: { meaning: [\"to fly\"], pinyin: \"fēi\" },\r\n    去: { meaning: [\"to go\"], pinyin: \"qù\" },\r\n    天: { meaning: [\"day\", \"sky\", \"heaven\"], pinyin: \"tiān\" },\r\n    云: { meaning: [\"cloud\"], pinyin: \"yún\" },\r\n    光: { meaning: [\"light\", \"ray\"], pinyin: \"guāng\" },\r\n    气: { meaning: [\"gas\", \"air\", \"smell\"], pinyin: \"qì\" },\r\n    雷: { meaning: [\"thunder\"], pinyin: \"léi\" },\r\n    弓: { meaning: [\"bow\"], pinyin: \"gōng\" },\r\n    网: { meaning: [\"net\", \"network\"], pinyin: \"wǎng\" },\r\n    球: { meaning: [\"ball\", \"sphere\", \"globe\"], pinyin: \"qiú\" },\r\n    足: { meaning: [\"foot\"], pinyin: \"zú\" },\r\n    朋: { meaning: [\"friend\"], pinyin: \"péng\" },\r\n    友: { meaning: [\"friend\"], pinyin: \"yǒu\" },\r\n    上: {\r\n        meaning: [\"on top\", \"upon\", \"above\", \"to climb\", \"to get onto\"],\r\n        pinyin: \"shàng\"\r\n    },\r\n    下: {\r\n        meaning: [\"down\", \"downwards\", \"below\", \"lower\", \"to go down\"],\r\n        pinyin: \"xià\"\r\n    },\r\n    车: { meaning: [\"car\", \"vehicle\"], pinyin: \"chē\" },\r\n    户: { meaning: [\"household\"], pinyin: \"hù\" },\r\n    孙: { meaning: [\"grandchild\"], pinyin: \"sūn\" },\r\n    生: {\r\n        meaning: [\"to be born\", \"to give birth\", \"life\", \"to grow\"],\r\n        pinyin: \"shēng\"\r\n    },\r\n    安: {\r\n        meaning: [\"content\", \"calm\", \"still\", \"quiet\", \"safe\"],\r\n        pinyin: \"ān\"\r\n    },\r\n    灾: { meaning: [\"disaster\"], pinyin: \"zāi\" },\r\n    品: {\r\n        meaning: [\"article\", \"commodity\", \"product\", \"goods\", \"quality\"],\r\n        pinyin: \"pǐn\"\r\n    },\r\n    味: { meaning: [\"taste\", \"smell\"], pinyin: \"wèi\" },\r\n    杏: { meaning: [\"apricot\", \"almond\"], pinyin: \"xìng\" },\r\n    茶: { meaning: [\"tea\", \"tea plant\"], pinyin: \"chá\" },\r\n    米: { meaning: [\"rice\"], pinyin: \"mǐ\", remarks: \"Refers to uncooked rice\" },\r\n    欠: { meaning: [\"to owe\", \"to lack\"], pinyin: \"qiàn\" },\r\n    言: { meaning: [\"words\", \"speech\", \"to say\", \"to talk\"], pinyin: \"yán\" },\r\n    吹: { meaning: [\"to blow\"], pinyin: \"chuī\" },\r\n    炊: { meaning: [\"to cook food\"], pinyin: \"chuī\" },\r\n    信: { meaning: [\"letter\", \"mail\"], pinyin: \"xìn\" },\r\n    仙: { meaning: [\"immortal\"], pinyin: \"xiān\" },\r\n    伙: { meaning: [\"companion\", \"partner\", \"group\"], pinyin: \"huǒ\" },\r\n    佛: { meaning: [\"Buddha\", \"Buddhism\"], pinyin: \"fó\" },\r\n    的: { meaning: [\"suffix to express possession\"], pinyin: \"de\" },\r\n    几: { meaning: [\"how many?\"], pinyin: \"jǐ\" }\r\n};\r\n\r\nfunction buildCharacters(rawCharacters: RawCharactersObject): CharacterObject {\r\n    const result: CharacterObject = {};\r\n    Object.entries(rawCharacters).forEach(\r\n        entry =>\r\n            (result[entry[0]] = {\r\n                logogram: entry[0],\r\n                id: hashify(entry[0]),\r\n                ...entry[1]\r\n            })\r\n    );\r\n    return result;\r\n}\r\n\r\nexport const characters = buildCharacters(rawCharacters);\r\n","import { Word } from \"./structures/word\";\r\nimport { characters } from \"./characters\";\r\nimport { hashify } from \"../utils/hashify\";\r\n\r\ntype RawWordsObject = { [propName: string]: Omit<Word, \"characters\" | \"id\"> };\r\ntype WordsObject = { [propName: string]: Word };\r\n\r\nconst rawWords: RawWordsObject = {\r\n    你好: { meaning: \"hello\" },\r\n    再见: { meaning: [\"bye\", \"goodbye\"] },\r\n    什么: { meaning: \"what\", remarks: \"replace with word you are asking for\" },\r\n    一二三四: { meaning: \"1, 2, 3, 4\", remarks: \"IH AH SEN TZÜÜÜ\" },\r\n    人人: { meaning: [\"everyone\", \"every person\"] },\r\n    大人: {\r\n        meaning: [\"adult\", \"grown-up\"],\r\n        remarks: \"title of respect toward superiors\"\r\n    },\r\n    小人: {\r\n        meaning: [\"I, me (used to refer humbly to oneself)\", \"nasty person\", \"villain\"]\r\n    },\r\n    大小: { meaning: [\"dimension\", \"magnitude\", \"size\"] },\r\n    小狗: { meaning: [\"puppy\"] },\r\n    火山: { meaning: [\"volcano\"] },\r\n    冰山: { meaning: [\"iceberg\"] },\r\n    山水: {\r\n        meaning: [\"scenery\", \"landscape\", \"water from a mountain\", \"mountains and rivers\"]\r\n    },\r\n    大雨: { meaning: [\"heavy rain\"] },\r\n    父母: { meaning: [\"father and mother\", \"parents\"] },\r\n    父子: { meaning: [\"father and son\"] },\r\n    父女: { meaning: [\"father and daughter\"] },\r\n    母子: { meaning: [\"mother and son\"] },\r\n    母女: { meaning: [\"mother and daughter\"] },\r\n    子女: { meaning: [\"sons and daughters\", \"children\"] },\r\n    大众: {\r\n        meaning: [\"the masses\", \"the great bulk of the population\", \"popular\"]\r\n    },\r\n    森林: { meaning: [\"forest\"] },\r\n    水晶: { meaning: [\"crystal\"] },\r\n    出众: { meaning: [\"to stand out\", \"outstanding\"] },\r\n    回家: { meaning: [\"to return home\"] },\r\n    出口: { meaning: [\"an exit\"] },\r\n    火山口: { meaning: [\"volcanic crater\"] },\r\n    不大不小: { meaning: [\"neither big nor small\"] },\r\n    门口: { meaning: [\"doorway\", \"gate\"] },\r\n    家人: { meaning: [\"family member\", \"family\"] },\r\n    风雨: { meaning: [\"rainstorm\", \"storm\", \"tempest\"] },\r\n    主人: { meaning: [\"master\", \"host\", \"owner\"] },\r\n    大王: { meaning: [\"king\"] },\r\n    女王: { meaning: [\"queen\"] },\r\n    王子: { meaning: [\"prince\"] },\r\n    猫王: { meaning: [\"Elvis Presley\"] },\r\n    山羊: { meaning: [\"goat\"] },\r\n    中国: { meaning: [\"China\"] },\r\n    美国: { meaning: [\"USA\"] },\r\n    木瓜: { meaning: [\"papaya \"] },\r\n    水果: { meaning: [\"fruit\"] },\r\n    油田: { meaning: [\"oil field\"] },\r\n    水田: { meaning: [\"paddy field\", \"rice field\"] },\r\n    冬天: { meaning: [\"winter\"] },\r\n    呆子: { meaning: [\"fool\", \"sucker\"] },\r\n    爸爸: { meaning: [\"dad\"] },\r\n    妈妈: { meaning: [\"mom\"] },\r\n    妹妹: { meaning: [\"younger sister\"] },\r\n    闪人: { meaning: [\"to sneak out\"] },\r\n    水果刀: { meaning: [\"fruit knife\"] },\r\n    国家: { meaning: [\"country\", \"nation\", \"state\"] },\r\n    国王: { meaning: [\"king\"] },\r\n    休火山: { meaning: [\"dormant volcano\"] },\r\n    住家: { meaning: [\"residence\", \"household\", \"to reside\"] },\r\n    保母: { meaning: [\"nanny\"] },\r\n    三点半: { meaning: [\"3 and a half o'clock\"] },\r\n    手心: { meaning: [\"palm\", \"control\"] },\r\n    身体: { meaning: [\"the body\", \"one's health\"] },\r\n    星星: { meaning: [\"star\"] },\r\n    海洋: { meaning: [\"ocean\"] },\r\n    东西南北: { meaning: [\"all directions\"] },\r\n    东西: { meaning: [\"thing\", \"stuff\", \"something\"] },\r\n    小吃: { meaning: [\"street food\", \"snack\"] },\r\n    大吃: { meaning: [\"to gobble\"] },\r\n    好吃: { meaning: [\"tasty\", \"delicious\"] },\r\n    工人: { meaning: [\"worker\"] },\r\n    手工: { meaning: [\"handmade\", \"handwork\", \"manual\"] },\r\n    女士: { meaning: [\"lady\", \"madam\"] },\r\n    海马: { meaning: [\"sea horse\"] },\r\n    海龟: { meaning: [\"sea turtle\"] },\r\n    女巫: { meaning: [\"witch\"] },\r\n    男巫: { meaning: [\"wizard\", \"warlock\"] },\r\n    去中国: { meaning: [\"go to China\"] },\r\n    有人: { meaning: [\"there is someone\", \"occupied (i.e. restroom)\"] },\r\n    去美国: { meaning: [\"go to the USA\"] },\r\n    白天: { meaning: [\"daytime\", \"during the day\"] },\r\n    天气: { meaning: [\"weather\"] },\r\n    雷雨: { meaning: [\"thunderstorm\"] },\r\n    雪人: { meaning: [\"snowman\", \"yeti\"] },\r\n    足球: { meaning: [\"football\", \"a football\"] },\r\n    球门: { meaning: [\"goalmouth\"] },\r\n    朋友: { meaning: [\"friend\"] },\r\n    网友: { meaning: [\"online friend\"] },\r\n    女朋友: { meaning: [\"girlfriend\"] },\r\n    男朋友: { meaning: [\"boyfriend\"] },\r\n    上车: { meaning: [\"to get on into (a bus, train, car etc.)\"] },\r\n    下车: { meaning: [\"to get off or out of (a bus, train, car etc)\"] },\r\n    七上八下: { meaning: [\"unsettled\", \"perturbed state of mind\"] },\r\n    上海: { meaning: [\"Shanghai\"] },\r\n    户口: { meaning: [\"population\", \"registered residence\"] },\r\n    孙女: { meaning: [\"granddaughter\"] },\r\n    孙子: { meaning: [\"grandson\"] },\r\n    生女: { meaning: [\"give birth to a baby girl\"] },\r\n    生男: { meaning: [\"give birth to a baby boy\"] },\r\n    安心: { meaning: [\"at ease\", \"to feel relived\"] },\r\n    水灾: { meaning: [\"flood\", \"flood damage\"] },\r\n    火灾: {\r\n        meaning: [\"fire disaster\", \"fire (that burns in i.e. a building)\"]\r\n    },\r\n    未来: {\r\n        meaning: [\"future\", \"tomorrow\", \"approaching\", \"coming\", \"pending\"]\r\n    },\r\n    来日: { meaning: [\"future days\", \"the next day\"] },\r\n    生日: { meaning: [\"birthday\"] },\r\n    回来: { meaning: [\"to return\", \"to come back\"] },\r\n    来回: { meaning: [\"to make a round trip\", \" back and forth\"] },\r\n    品味: { meaning: [\"to taste\", \"tasteful\", \"one's taste\", \"good taste\"] },\r\n    人品: { meaning: [\"morality\", \"character\", \"personality\"] },\r\n    口味: { meaning: [\"flavor\"] },\r\n    女人味: { meaning: [\"feminine\"] },\r\n    中国茶: { meaning: [\"Chinese tea\"] },\r\n    大米: { meaning: [\"husked rice\"] },\r\n    仙人: { meaning: [\"celestial being\"] },\r\n    大伙: { meaning: [\"folks\", \"everybody\", \"everyone\", \"we all\"] },\r\n    仙子: { meaning: [\"fairy\"] }\r\n};\r\n\r\nfunction buildWords(rawWords: RawWordsObject): WordsObject {\r\n    const result: WordsObject = {};\r\n    Object.entries(characters).forEach(entry => {\r\n        result[entry[0]] = { characters: [entry[1]], ...entry[1] };\r\n    });\r\n    Object.entries(rawWords).forEach(entry => {\r\n        result[entry[0]] = {\r\n            ...entry[1],\r\n            characters: entry[0].split(\"\").map(characterIdentifier => characters[characterIdentifier]),\r\n            id: hashify(entry[0])\r\n        };\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const words = buildWords(rawWords);\r\n","import { routerService } from \"../services/router_service\";\nimport * as React from \"react\";\n\nexport const useRouterInitialization: () => void = () => {\n    const isInitializedRef: React.MutableRefObject<boolean> = React.useRef(false);\n    if (!isInitializedRef.current) {\n        routerService.initialize();\n        isInitializedRef.current = true;\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"./App.css\";\nimport { FilterPageComponent } from \"./components/filter_page_component/filter_page_component\";\nimport { words } from \"./data/words\";\nimport { useRouterInitialization } from \"./hooks/use_router_initialization\";\nimport { pinyinify } from \"./utils/pinyinify\";\n\nexport function App() {\n    useRouterInitialization();\n\n    return (\n        <div className=\"app\">\n            {FilterPageComponent(\n                Object.values(words)\n                    .map(value => value)\n                    .sort((a, b) => pinyinify(a).localeCompare(pinyinify(b)))\n            )}\n        </div>\n    );\n}\n"],"sourceRoot":""}