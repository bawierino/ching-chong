{"version":3,"sources":["hooks/use_checkbox.ts","hooks/use_text_input.ts","utils/joinify.ts","components/word_card_component.tsx","components/loudspeaker_icon_component.tsx","utils/speech_synthesify.ts","components/detailed_word_card_component.tsx","components/filter_page_component/use_page_filter.ts","utils/hashify.ts","data/characters.ts","data/words.ts","serviceWorker.ts","index.tsx","App.tsx","components/filter_page_component/filter_page_component.tsx"],"names":["useCheckbox","initialValue","_React$useState","React","_React$useState2","Object","slicedToArray","checked","setChecked","onChange","event","target","type","useTextInput","value","setValue","joinify","strings","Array","isArray","join","WordCardComponent","props","characters","onClick","hideMeaning","hidePinYin","react","className","id","map","c","key","logogram","character","pinyin","meaning","LoudspeakerIconComponent","focusable","xmlns","viewBox","d","speechSynthesify","message","utterance","SpeechSynthesisUtterance","voice","speechSynthesis","getVoices","lang","speak","DetailedWordCardComponent","onBack","word","onSubCharacterClick","remarks","close","e","isMultiCharacterWord","length","window","addEventListener","removeEventListener","concat","usePageFilter","initialResults","words","meaningFilterValue","pinYinFilterValue","useExactPinYin","results","setResults","searchResults","searchTerm","toLowerCase","replace","filter","includes","normalize","candidate","hashify","input","hash","toString","i","charCodeAt","rawCharacters","result","entries","forEach","entry","objectSpread","buildCharacters","你","好","再","见","零","一","二","三","四","五","六","七","八","九","十","百","元","名","姓","什","么","呢","叫","人","大","夫","小","日","月","明","旦","夕","兔","狗","猫","马","火","木","山","石","水","雨","冰","雪","风","从","炎","林","出","岩","子","女","父","母","家","众","焱","晶","森","口","心","目","耳","手","回","不","老","平","高","长","门","间","王","主","后","玉","牛","羊","鸟","鱼","国","中","美","白","金","珀","淡","田","竹","冬","草","苗","吃","喝","瓜","果","油","呆","未","末","来","爸","妈","妹","住","保","休","闪","皿","刀","酉","点","半","身","体","星","海","洋","东","西","南","北","工","士","贝","蛙","龟","丑","巫","男","有","飞","去","天","云","光","气","雷","弓","网","球","足","朋","友","上","下","车","户","孙","生","安","灾","品","味","杏","茶","米","欠","言","吹","炊","信","仙","伙","佛","rawWords","split","characterIdentifier","buildWords","你好","再见","什么","一二三四","Boolean","location","hostname","match","ReactDOM","render","react_default","a","createElement","meaningFilterTextInput","pinYinFilterTextInput","exactPinYinCheckbox","hidePinYinCheckbox","hideMeaningCheckbox","undefined","detailedWordId","setDetailedWordId","_React$useState3","_React$useState4","backCharacterId","setBackCharacterId","scrollTopRef","canResetFilters","resetFilters","closeDetailedWord","requestAnimationFrame","document","documentElement","scrollTop","current","getWordById","wordFromResults","find","wordFromAllWords","Error","disabled","placeholder","title","assign","FilterPageComponent","values","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d53fda0a.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport const useCheckbox: (\r\n\tinitialValue: boolean\r\n) => {\r\n\tchecked: boolean;\r\n\tonChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n\ttype: string;\r\n\tsetChecked: (checked: boolean) => void;\r\n} = (initialValue: boolean) => {\r\n\tconst [ checked, setChecked ] = React.useState(initialValue);\r\n\treturn { checked, onChange: (event) => setChecked(event.target.checked), type: 'checkbox', setChecked };\r\n};\r\n","import * as React from 'react';\r\n\r\nexport const useTextInput: (\r\n\tinitialValue: string\r\n) => {\r\n\tvalue: string;\r\n\tonChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n\ttype: string;\r\n\tsetValue: (value: string) => void;\r\n} = (initialValue: string) => {\r\n\tconst [ value, setValue ] = React.useState(initialValue);\r\n\treturn {\r\n\t\tvalue,\r\n\t\tonChange: (event) => setValue(event.target.value),\r\n\t\ttype: 'text',\r\n\t\tsetValue\r\n\t};\r\n};\r\n","export function joinify(strings: undefined | string | string[]): string | undefined {\r\n\treturn Array.isArray(strings) ? strings.join(', ') : strings;\r\n}\r\n","import * as React from 'react';\r\nimport { Word } from '../data/structures/word';\r\nimport { joinify } from '../utils/joinify';\r\n\r\nexport interface WordCardComponentProps extends Word {\r\n\tonClick: (word: string) => void;\r\n\tid: string;\r\n\thidePinYin: boolean;\r\n\thideMeaning: boolean;\r\n}\r\n\r\nexport function WordCardComponent(props: WordCardComponentProps): JSX.Element {\r\n\tconst { characters, onClick, hideMeaning, hidePinYin } = props;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"word\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\tonClick(props.id);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"characters\">\r\n\t\t\t\t{characters.map((c) => (\r\n\t\t\t\t\t<div key={c.id} className=\"character\">\r\n\t\t\t\t\t\t{c.logogram}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t{!hidePinYin && <div>{characters.map((character) => character.pinyin)}</div>}\r\n\t\t\t{!hideMeaning && <div className=\"word-meaning\">{joinify(props.meaning)}</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import * as React from 'react';\r\n\r\nexport interface LoudspeakerIconComponentProps {\r\n\tonClick: () => void;\r\n}\r\n\r\nexport function LoudspeakerIconComponent(props: LoudspeakerIconComponentProps): JSX.Element {\r\n\treturn (\r\n\t\t<div className=\"loudspeaker\" onClick={props.onClick}>\r\n\t\t\t<svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n\t\t\t\t<path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\" />\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export const speechSynthesify: (message: string) => void = (message) => {\r\n\tconst utterance = new SpeechSynthesisUtterance(message);\r\n\tutterance.voice = speechSynthesis.getVoices()[20];\r\n\tutterance.lang = 'zh';\r\n\tspeechSynthesis.speak(utterance);\r\n};\r\n","import * as React from 'react';\r\nimport { Word } from '../data/structures/word';\r\nimport { joinify } from '../utils/joinify';\r\nimport { WordCardComponent } from './word_card_component';\r\nimport { LoudspeakerIconComponent } from './loudspeaker_icon_component';\r\nimport { speechSynthesify } from '../utils/speech_synthesify';\r\n\r\nexport interface DetailedWordCardComponentProps {\r\n\tword: Word;\r\n\tid: string;\r\n\tonBack: (id: string) => void;\r\n\tonSubCharacterClick: (id: string) => void;\r\n}\r\n\r\nexport function DetailedWordCardComponent(props: DetailedWordCardComponentProps): JSX.Element {\r\n\tconst { onBack, id, word, onSubCharacterClick } = props;\r\n\tconst { characters, meaning, remarks } = word;\r\n\tconst logogram = characters.map((c) => c.logogram).join('');\r\n\r\n\tfunction close(e: KeyboardEvent): void {\r\n\t\tif (e.key === 'Escape') {\r\n\t\t\tonBack(id);\r\n\t\t}\r\n\t}\r\n\tReact.useEffect(() => {\r\n\t\twindow.addEventListener('keydown', close, true);\r\n\t\treturn () => window.removeEventListener('keydown', close, true);\r\n\t});\r\n\r\n\tfunction renderWordDetails(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"detailed-word-word\">{logogram}</div>\r\n\t\t\t\t<div className=\"detailed-word-pinyin\">{characters.map((c) => c.pinyin)}</div>\r\n\t\t\t\t{meaning && (\r\n\t\t\t\t\t<div className=\"detailed-word-meaning\">\r\n\t\t\t\t\t\t<strong>Meaning: </strong>\r\n\t\t\t\t\t\t{joinify(meaning)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{remarks && (\r\n\t\t\t\t\t<div className=\"detailed-word-remarks\">\r\n\t\t\t\t\t\t<strong>Remarks: </strong>\r\n\t\t\t\t\t\t{joinify(remarks)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction isMultiCharacterWord(): boolean {\r\n\t\treturn characters.length > 1;\r\n\t}\r\n\r\n\tfunction renderCharacterInformation(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div className=\"words\">\r\n\t\t\t\t{characters.map((c) => (\r\n\t\t\t\t\t<WordCardComponent\r\n\t\t\t\t\t\tid={c.id}\r\n\t\t\t\t\t\tonClick={onSubCharacterClick}\r\n\t\t\t\t\t\tcharacters={[ c ]}\r\n\t\t\t\t\t\tmeaning={c.meaning}\r\n\t\t\t\t\t\tremarks={c.remarks}\r\n\t\t\t\t\t\tkey={c.id}\r\n\t\t\t\t\t\thideMeaning={false}\r\n\t\t\t\t\t\thidePinYin={false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className={`word detailed ${isMultiCharacterWord() ? 'multi-character' : ''}`}>\r\n\t\t\t\t{'speechSynthesis' in window && (\r\n\t\t\t\t\t<LoudspeakerIconComponent\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tspeechSynthesify(logogram);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{renderWordDetails()}\r\n\t\t\t</div>\r\n\t\t\t{isMultiCharacterWord() && renderCharacterInformation()}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import { Word } from '../../data/structures/word';\r\nimport { joinify } from '../../utils/joinify';\r\nimport * as React from 'react';\r\n\r\nexport const usePageFilter: (\r\n\tinitialResults: Word[],\r\n\twords: Word[],\r\n\tmeaningFilterValue: string,\r\n\tpinYinFilterValue: string,\r\n\tuseExactPinYin: boolean\r\n) => Word[] = (\r\n\tinitialResults: Word[],\r\n\twords: Word[],\r\n\tmeaningFilterValue: string,\r\n\tpinYinFilterValue: string,\r\n\tuseExactPinYin: boolean\r\n) => {\r\n\tconst [ results, setResults ] = React.useState(initialResults);\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tlet searchResults: Word[] = words;\r\n\r\n\t\t\tif (meaningFilterValue) {\r\n\t\t\t\tconst searchTerm: string = meaningFilterValue.toLowerCase().replace(/ /g, '');\r\n\r\n\t\t\t\tsearchResults = searchResults.filter((word) => {\r\n\t\t\t\t\tconst candidate: string = (joinify(word.meaning) || '').toLowerCase().replace(/ /g, '');\r\n\t\t\t\t\treturn candidate.includes(searchTerm);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (pinYinFilterValue) {\r\n\t\t\t\tconst searchTerm: string = pinYinFilterValue\r\n\t\t\t\t\t.replace(/ /g, '')\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.normalize('NFD')\r\n\t\t\t\t\t.replace(/[\\u0300-\\u036f]/g, '');\r\n\r\n\t\t\t\tsearchResults = searchResults.filter((word) => {\r\n\t\t\t\t\tconst candidate: string = word.characters\r\n\t\t\t\t\t\t.map((character) => character.pinyin)\r\n\t\t\t\t\t\t.join('')\r\n\t\t\t\t\t\t.replace(/ /g, '')\r\n\t\t\t\t\t\t.normalize('NFD')\r\n\t\t\t\t\t\t.replace(/[\\u0300-\\u036f]/g, '')\r\n\t\t\t\t\t\t.toLowerCase();\r\n\t\t\t\t\treturn useExactPinYin ? candidate === searchTerm : candidate.includes(searchTerm);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tsetResults(searchResults);\r\n\t\t},\r\n\t\t[ results, useExactPinYin, meaningFilterValue, pinYinFilterValue, words ]\r\n\t);\r\n\treturn results;\r\n};\r\n","export function hashify(input: string): string {\r\n\tlet hash = 0;\r\n\tif (input.length === 0) {\r\n\t\treturn hash.toString();\r\n\t}\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\tconst char = input.charCodeAt(i);\r\n\t\thash = (hash << 5) - hash + char;\r\n\t\thash = hash & hash;\r\n\t}\r\n\treturn hash.toString();\r\n}\r\n","import { Character } from './structures/character';\r\nimport { hashify } from '../utils/hashify';\r\n\r\ntype RawCharactersObject = { [propName: string]: Omit<Character, 'logogram' | 'id'> };\r\ntype CharacterObject = { [propName: string]: Character };\r\n\r\n// :{meaning:[''],pinyin:''},\r\n\r\nconst rawCharacters: RawCharactersObject = {\r\n\t你: { meaning: 'you', pinyin: 'nǐ' },\r\n\t好: { meaning: 'good', pinyin: 'hǎo' },\r\n\t再: { pinyin: 'zài' },\r\n\t见: { pinyin: 'jiàn' },\r\n\t零: { meaning: '0', pinyin: 'líng' },\r\n\t一: { meaning: '1', pinyin: 'yī' },\r\n\t二: { meaning: '2', pinyin: 'èr' },\r\n\t三: { meaning: '3', pinyin: 'sān' },\r\n\t四: { meaning: '4', pinyin: 'sì' },\r\n\t五: { meaning: '5', pinyin: 'wǔ' },\r\n\t六: { meaning: '6', pinyin: 'liù' },\r\n\t七: { meaning: '7', pinyin: 'qī' },\r\n\t八: { meaning: '8', pinyin: 'bā' },\r\n\t九: { meaning: '9', pinyin: 'jiǔ' },\r\n\t十: { meaning: '10', pinyin: 'shí' },\r\n\t百: { meaning: '100', pinyin: 'bǎi' },\r\n\t元: { meaning: [ 'yuan', '¥' ], pinyin: 'yuán' },\r\n\t名: { meaning: 'name', pinyin: 'míng' },\r\n\t姓: {\r\n\t\tmeaning: [ 'to be called (family-name)', 'to be called (last-name)' ],\r\n\t\tpinyin: 'xìng'\r\n\t},\r\n\t什: { pinyin: 'shén' },\r\n\t么: { pinyin: 'me' },\r\n\t呢: {\r\n\t\tpinyin: 'ne',\r\n\t\tremarks: 'Binding word used after answering a questions to direct the question to someone else'\r\n\t},\r\n\t叫: { meaning: 'to be called', pinyin: 'jiào' },\r\n\t人: { meaning: 'person', pinyin: 'rén' },\r\n\t大: { meaning: [ 'big', 'large', 'great' ], pinyin: 'dà' },\r\n\t夫: { meaning: [ 'male adult', 'husband' ], pinyin: 'fū' },\r\n\t小: { meaning: [ 'small', 'few', 'young' ], pinyin: 'xiǎo' },\r\n\t日: { meaning: [ 'sun', 'day' ], pinyin: 'rì' },\r\n\t月: { meaning: [ 'moon', 'month', 'monthly' ], pinyin: 'yuè' },\r\n\t明: { meaning: [ 'bright', 'of clear meaning', 'to understand', 'wise' ], pinyin: 'míng' },\r\n\t旦: { meaning: [ 'dawn', 'morning', 'daybreak' ], pinyin: 'dàn' },\r\n\t夕: { meaning: [ 'dusk', 'dawn' ], pinyin: 'xī' },\r\n\t兔: { meaning: [ 'rabbit' ], pinyin: 'tù' },\r\n\t狗: { meaning: [ 'dog' ], pinyin: 'gǒu' },\r\n\t猫: { meaning: [ 'cat' ], pinyin: 'māo' },\r\n\t马: { meaning: [ 'horse' ], pinyin: 'mǎ' },\r\n\t火: { meaning: [ 'fire', 'urgent', 'ammunition' ], pinyin: 'huǒ' },\r\n\t木: { meaning: [ 'tree', 'wood', 'wooden', 'coffin', 'simple' ], pinyin: 'mù' },\r\n\t山: { meaning: [ 'mountain', 'hill' ], pinyin: 'shān' },\r\n\t石: { meaning: [ 'stone' ], pinyin: 'shí' },\r\n\t水: { meaning: [ 'water', 'river', 'liquid', 'beverage' ], pinyin: 'shuǐ' },\r\n\t雨: { meaning: [ 'rain' ], pinyin: 'yǔ' },\r\n\t冰: { meaning: [ 'ice' ], pinyin: 'bīng' },\r\n\t雪: { meaning: [ 'snow', 'snowfall' ], pinyin: 'xuě' },\r\n\t风: { meaning: [ 'wind', 'news' ], pinyin: 'fēng' },\r\n\t从: { meaning: [ 'from' ], pinyin: 'cóng' },\r\n\t炎: { meaning: [ 'flame', 'inflammation' ], pinyin: 'yán' },\r\n\t林: { meaning: [ 'woods', 'forest' ], pinyin: 'lín' },\r\n\t出: { meaning: [ 'to go out' ], pinyin: 'chū' },\r\n\t岩: { meaning: [ 'rock', 'cliff' ], pinyin: 'yán' },\r\n\t子: {\r\n\t\tmeaning: [ 'son', 'child', 'seed', 'egg' ],\r\n\t\tpinyin: 'zǐ',\r\n\t\tremarks: [ 'Often pronounced with no tone as a suffix to emphasize smallness' ]\r\n\t},\r\n\t女: { meaning: [ 'female', 'woman', 'daughter' ], pinyin: 'nǚ' },\r\n\t父: { meaning: [ 'father' ], pinyin: 'fù' },\r\n\t母: { meaning: [ 'mother', 'elderly female relative', 'origin' ], pinyin: 'mǔ' },\r\n\t家: { meaning: [ 'home', 'family' ], pinyin: 'jiā' },\r\n\t众: { meaning: [ 'crowd', 'many', 'numerous' ], pinyin: 'zhòng' },\r\n\t焱: { meaning: [ 'flame' ], pinyin: 'yàn' },\r\n\t晶: { meaning: [ 'crystal' ], pinyin: 'jīng' },\r\n\t森: { meaning: [ 'forest' ], pinyin: 'sēn' },\r\n\t口: { meaning: [ 'mouth' ], pinyin: 'kǒu' },\r\n\t心: { meaning: [ 'heart', 'mind' ], pinyin: 'xīn' },\r\n\t目: { meaning: [ 'eye' ], pinyin: 'mù' },\r\n\t耳: { meaning: [ 'ear' ], pinyin: 'ěr' },\r\n\t手: { meaning: [ 'hand' ], pinyin: 'shǒu' },\r\n\t回: { meaning: [ 'to circle', 'to go back' ], pinyin: 'huí' },\r\n\t不: { meaning: [ 'not' ], pinyin: 'bù' },\r\n\t老: { meaning: [ 'old', 'experienced', 'always' ], pinyin: 'lǎo' },\r\n\t平: { meaning: [ 'flat', 'equal', 'fair' ], pinyin: 'píng' },\r\n\t高: { meaning: [ 'high', 'tall', 'above average', 'loud' ], pinyin: 'gāo' },\r\n\t长: { meaning: [ 'length', 'long', 'forever', 'always' ], pinyin: 'cháng' },\r\n\t门: { meaning: [ 'gate', 'door' ], pinyin: 'mén' },\r\n\t间: { meaning: [ 'between', 'among', 'room' ], pinyin: 'jiān' },\r\n\t王: {\r\n\t\tmeaning: [ 'king', 'monarch' ],\r\n\t\tpinyin: 'wáng',\r\n\t\tremarks: 'Pronounced \"wàng\" it means \"to rule\" or \"to reign\"'\r\n\t},\r\n\t主: { meaning: [ 'master', 'owner', 'host' ], pinyin: 'zhǔ' },\r\n\t后: { meaning: [ 'queen', 'empress', 'back', 'behind', 'after', 'later' ], pinyin: 'hòu' },\r\n\t玉: { meaning: [ 'jade' ], pinyin: 'yù' },\r\n\t牛: { meaning: [ 'bull', 'cow', 'ox' ], pinyin: 'niú' },\r\n\t羊: { meaning: [ 'sheep' ], pinyin: 'yáng' },\r\n\t鸟: { meaning: [ 'bird' ], pinyin: 'niǎo' },\r\n\t鱼: { meaning: [ 'fish' ], pinyin: 'yú' },\r\n\t国: { meaning: [ 'country', 'nation', 'state', 'national' ], pinyin: 'guó' },\r\n\t中: { meaning: [ 'within', 'among', 'in', 'middle' ], pinyin: 'zhōng' },\r\n\t美: { meaning: [ 'beautiful', 'very satisfactory' ], pinyin: 'měi' },\r\n\t白: { meaning: [ 'white', 'snowy', 'pure', 'bright' ], pinyin: 'bái' },\r\n\t金: { meaning: [ 'gold', 'golden', 'money', 'highly respected' ], pinyin: 'jīn' },\r\n\t珀: { meaning: [ 'amber' ], pinyin: 'pò' },\r\n\t淡: { meaning: [ 'plain', 'tasteless', 'mild' ], pinyin: 'dàn' },\r\n\t田: { meaning: [ 'field', 'farm' ], pinyin: 'tián' },\r\n\t竹: { meaning: [ 'bamboo' ], pinyin: 'zhú' },\r\n\t冬: { meaning: [ 'winter' ], pinyin: 'dōng' },\r\n\t草: { meaning: [ 'grass', 'straw', 'manuscript' ], pinyin: 'cǎo' },\r\n\t苗: { meaning: [ 'sprout', 'bud' ], pinyin: 'miáo' },\r\n\t吃: { meaning: [ 'to eat' ], pinyin: 'chī' },\r\n\t喝: { meaning: [ 'to drink' ], pinyin: 'hē' },\r\n\t瓜: { meaning: [ 'melon' ], pinyin: 'guā' },\r\n\t果: { meaning: [ 'fruit', 'nut' ], pinyin: 'guǒ' },\r\n\t油: { meaning: [ 'oil', 'fat', 'greasy', 'oily' ], pinyin: 'yóu' },\r\n\t呆: { meaning: [ 'foolish', 'stupid', 'idiot' ], pinyin: 'dāi' },\r\n\t未: { meaning: [ 'not yet' ], pinyin: 'wèi' },\r\n\t末: { meaning: [ 'final', 'end' ], pinyin: 'mò' },\r\n\t来: { meaning: [ 'to come', 'to arrive', 'ever since' ], pinyin: 'lái' },\r\n\t爸: { meaning: [ 'father', 'dad' ], pinyin: 'bà' },\r\n\t妈: { meaning: [ 'mama' ], pinyin: 'mā' },\r\n\t妹: { meaning: [ 'younger sister' ], pinyin: 'mèi' },\r\n\t住: { meaning: [ 'to stay', 'to stay', 'to reside' ], pinyin: 'zhù' },\r\n\t保: { meaning: [ 'to protect', 'to defend' ], pinyin: 'bǎo' },\r\n\t休: { meaning: [ 'to rest' ], pinyin: 'xiū' },\r\n\t闪: { meaning: [ 'to dodge' ], pinyin: 'shǎn' },\r\n\t皿: { meaning: [ 'dish', 'vessel' ], pinyin: 'mǐn' },\r\n\t刀: { meaning: [ 'knife', 'blade', '(single-edged) sword' ], pinyin: 'dāo' },\r\n\t酉: { meaning: [ 'vessel' ], pinyin: 'yǒu' },\r\n\t点: { meaning: [ \"o'clock\", 'point', 'dot', 'drop' ], pinyin: 'diǎn' },\r\n\t半: { meaning: [ 'half', 'semi', 'incomplete' ], pinyin: 'bàn' },\r\n\t身: { meaning: [ 'body', 'life', 'personally' ], pinyin: 'shēn' },\r\n\t体: { meaning: [ 'body', 'form', 'system' ], pinyin: 'tǐ' },\r\n\t星: { meaning: [ 'star', 'heavenly body', 'satellite' ], pinyin: 'xīng' },\r\n\t海: { meaning: [ 'ocean', 'sea' ], pinyin: 'hǎi' },\r\n\t洋: { meaning: [ 'ocean', 'vast', 'foreign' ], pinyin: 'yáng' },\r\n\t东: { meaning: [ 'east' ], pinyin: 'dōng' },\r\n\t西: { meaning: [ 'west' ], pinyin: 'xī' },\r\n\t南: { meaning: [ 'south' ], pinyin: 'nán' },\r\n\t北: { meaning: [ 'north' ], pinyin: 'běi' },\r\n\t工: { meaning: [ '' ], pinyin: '' },\r\n\t士: { meaning: [ '' ], pinyin: '' },\r\n\t贝: { meaning: [ '' ], pinyin: '' },\r\n\t蛙: { meaning: [ '' ], pinyin: '' },\r\n\t龟: { meaning: [ '' ], pinyin: '' },\r\n\t丑: { meaning: [ '' ], pinyin: '' },\r\n\t巫: { meaning: [ '' ], pinyin: '' },\r\n\t男: { meaning: [ '' ], pinyin: '' },\r\n\t有: { meaning: [ '' ], pinyin: '' },\r\n\t飞: { meaning: [ '' ], pinyin: '' },\r\n\t去: { meaning: [ '' ], pinyin: '' },\r\n\t天: { meaning: [ '' ], pinyin: '' },\r\n\t云: { meaning: [ '' ], pinyin: '' },\r\n\t光: { meaning: [ '' ], pinyin: '' },\r\n\t气: { meaning: [ '' ], pinyin: '' },\r\n\t雷: { meaning: [ '' ], pinyin: '' },\r\n\t弓: { meaning: [ '' ], pinyin: '' },\r\n\t网: { meaning: [ '' ], pinyin: '' },\r\n\t球: { meaning: [ '' ], pinyin: '' },\r\n\t足: { meaning: [ '' ], pinyin: '' },\r\n\t朋: { meaning: [ '' ], pinyin: '' },\r\n\t友: { meaning: [ '' ], pinyin: '' },\r\n\t上: { meaning: [ '' ], pinyin: '' },\r\n\t下: { meaning: [ '' ], pinyin: '' },\r\n\t车: { meaning: [ '' ], pinyin: '' },\r\n\t户: { meaning: [ '' ], pinyin: '' },\r\n\t孙: { meaning: [ '' ], pinyin: '' },\r\n\t生: { meaning: [ '' ], pinyin: '' },\r\n\t安: { meaning: [ '' ], pinyin: '' },\r\n\t灾: { meaning: [ '' ], pinyin: '' },\r\n\t品: { meaning: [ '' ], pinyin: '' },\r\n\t味: { meaning: [ '' ], pinyin: '' },\r\n\t杏: { meaning: [ '' ], pinyin: '' },\r\n\t茶: { meaning: [ '' ], pinyin: '' },\r\n\t米: { meaning: [ '' ], pinyin: '' },\r\n\t欠: { meaning: [ '' ], pinyin: '' },\r\n\t言: { meaning: [ '' ], pinyin: '' },\r\n\t吹: { meaning: [ '' ], pinyin: '' },\r\n\t炊: { meaning: [ '' ], pinyin: '' },\r\n\t信: { meaning: [ '' ], pinyin: '' },\r\n\t仙: { meaning: [ '' ], pinyin: '' },\r\n\t伙: { meaning: [ '' ], pinyin: '' },\r\n\t佛: { meaning: [ '' ], pinyin: '' }\r\n};\r\n\r\nfunction buildCharacters(rawCharacters: RawCharactersObject): CharacterObject {\r\n\tconst result: CharacterObject = {};\r\n\tObject.entries(rawCharacters).forEach(\r\n\t\t(entry) => (result[entry[0]] = { logogram: entry[0], id: hashify(entry[0]), ...entry[1] })\r\n\t);\r\n\treturn result;\r\n}\r\n\r\nexport const characters = buildCharacters(rawCharacters);\r\n","import { Word } from './structures/word';\r\nimport { characters } from './characters';\r\nimport { hashify } from '../utils/hashify';\r\n\r\ntype RawWordsObject = { [propName: string]: Omit<Word, 'characters' | 'id'> };\r\ntype WordsObject = { [propName: string]: Word };\r\n\r\nconst rawWords: RawWordsObject = {\r\n\t你好: { meaning: 'hello' },\r\n\t再见: { meaning: [ 'bye', 'goodbye' ] },\r\n\t什么: { meaning: 'what', remarks: 'replace with word you are asking for' },\r\n\t一二三四: { meaning: '1, 2, 3, 4', remarks: 'IH AH SEN TZÜÜÜ' }\r\n};\r\n\r\nfunction buildWords(rawWords: RawWordsObject): WordsObject {\r\n\tconst result: WordsObject = {};\r\n\tObject.entries(characters).forEach((entry) => {\r\n\t\tresult[entry[0]] = { characters: [ entry[1] ], ...entry[1] };\r\n\t});\r\n\tObject.entries(rawWords).forEach((entry) => {\r\n\t\tresult[entry[0]] = {\r\n\t\t\t...entry[1],\r\n\t\t\tcharacters: entry[0].split('').map((characterIdentifier) => characters[characterIdentifier]),\r\n\t\t\tid: hashify(entry[0])\r\n\t\t};\r\n\t});\r\n\treturn result;\r\n}\r\n\r\nexport const words = buildWords(rawWords);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { FilterPageComponent } from './components/filter_page_component/filter_page_component';\r\nimport { words } from './data/words';\r\n\r\nexport function App() {\r\n\treturn <div className=\"app\">{FilterPageComponent(Object.values(words).map((value) => value))}</div>;\r\n}\r\n","import * as React from 'react';\r\nimport { Word } from '../../data/structures/word';\r\nimport { useCheckbox } from '../../hooks/use_checkbox';\r\nimport { useTextInput } from '../../hooks/use_text_input';\r\nimport { DetailedWordCardComponent } from '../detailed_word_card_component';\r\nimport { WordCardComponent } from '../word_card_component';\r\nimport { usePageFilter } from './use_page_filter';\r\n\r\nexport function FilterPageComponent(words: Word[]): JSX.Element {\r\n\tconst meaningFilterTextInput = useTextInput('');\r\n\tconst pinYinFilterTextInput = useTextInput('');\r\n\tconst exactPinYinCheckbox = useCheckbox(false);\r\n\tconst hidePinYinCheckbox = useCheckbox(false);\r\n\tconst hideMeaningCheckbox = useCheckbox(false);\r\n\tconst results = usePageFilter(\r\n\t\t[],\r\n\t\twords,\r\n\t\tmeaningFilterTextInput.value,\r\n\t\tpinYinFilterTextInput.value,\r\n\t\texactPinYinCheckbox.checked\r\n\t);\r\n\r\n\tconst [ detailedWordId, setDetailedWordId ] = React.useState(undefined as string | undefined);\r\n\tconst [ backCharacterId, setBackCharacterId ] = React.useState(undefined as string | undefined);\r\n\r\n\tconst scrollTopRef: React.MutableRefObject<number> = React.useRef(0);\r\n\r\n\tfunction renderPageFilters(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div className=\"filter-bar\">\r\n\t\t\t\t{detailedWordId ? (\r\n\t\t\t\t\t<button onClick={closeDetailedWord}>←</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t<button disabled={!canResetFilters()} onClick={resetFilters}>\r\n\t\t\t\t\t\t\t\tReset filters\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tplaceholder=\"Filter by meaning\"\r\n\t\t\t\t\t\t\tonChange={meaningFilterTextInput.onChange}\r\n\t\t\t\t\t\t\tvalue={meaningFilterTextInput.value}\r\n\t\t\t\t\t\t\ttype={meaningFilterTextInput.type}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tplaceholder=\"Filter by pin yin\"\r\n\t\t\t\t\t\t\tonChange={pinYinFilterTextInput.onChange}\r\n\t\t\t\t\t\t\tvalue={pinYinFilterTextInput.value}\r\n\t\t\t\t\t\t\ttype={pinYinFilterTextInput.type}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tchecked={exactPinYinCheckbox.checked}\r\n\t\t\t\t\t\t\ttype={exactPinYinCheckbox.type}\r\n\t\t\t\t\t\t\tonChange={exactPinYinCheckbox.onChange}\r\n\t\t\t\t\t\t\ttitle=\"Enable exact pinyin filtering. Ignores tones.\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tchecked={hidePinYinCheckbox.checked}\r\n\t\t\t\t\t\t\ttype={hidePinYinCheckbox.type}\r\n\t\t\t\t\t\t\tonChange={hidePinYinCheckbox.onChange}\r\n\t\t\t\t\t\t\ttitle=\"Hide pinyin\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tchecked={hideMeaningCheckbox.checked}\r\n\t\t\t\t\t\t\ttype={hideMeaningCheckbox.type}\r\n\t\t\t\t\t\t\tonChange={hideMeaningCheckbox.onChange}\r\n\t\t\t\t\t\t\ttitle=\"Hide meaning\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction canResetFilters(): boolean {\r\n\t\treturn (\r\n\t\t\t!!meaningFilterTextInput.value ||\r\n\t\t\t!!pinYinFilterTextInput.value ||\r\n\t\t\t!!exactPinYinCheckbox.checked ||\r\n\t\t\t!!hideMeaningCheckbox.checked ||\r\n\t\t\t!!hidePinYinCheckbox.checked\r\n\t\t);\r\n\t}\r\n\r\n\tfunction resetFilters(): void {\r\n\t\tif (canResetFilters()) {\r\n\t\t\tmeaningFilterTextInput.setValue('');\r\n\t\t\tpinYinFilterTextInput.setValue('');\r\n\t\t\texactPinYinCheckbox.setChecked(false);\r\n\t\t\thidePinYinCheckbox.setChecked(false);\r\n\t\t\thideMeaningCheckbox.setChecked(false);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderResults(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{results.map((result) => (\r\n\t\t\t\t\t<WordCardComponent\r\n\t\t\t\t\t\tid={result.id}\r\n\t\t\t\t\t\tonClick={(id) => {\r\n\t\t\t\t\t\t\tsetDetailedWordId(id);\r\n\t\t\t\t\t\t\tscrollTopRef.current = document.documentElement.scrollTop;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t{...result}\r\n\t\t\t\t\t\tkey={result.id}\r\n\t\t\t\t\t\thidePinYin={hidePinYinCheckbox.checked}\r\n\t\t\t\t\t\thideMeaning={hideMeaningCheckbox.checked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction renderDetailedWord(): JSX.Element {\r\n\t\tif (detailedWordId !== undefined) {\r\n\t\t\treturn (\r\n\t\t\t\t<DetailedWordCardComponent\r\n\t\t\t\t\tword={getWordById(detailedWordId)}\r\n\t\t\t\t\tid={detailedWordId}\r\n\t\t\t\t\tonBack={closeDetailedWord}\r\n\t\t\t\t\tonSubCharacterClick={(id) => {\r\n\t\t\t\t\t\tsetBackCharacterId(detailedWordId);\r\n\t\t\t\t\t\tsetDetailedWordId(id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <React.Fragment />;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction closeDetailedWord(): void {\r\n\t\tif (detailedWordId) {\r\n\t\t\tif (backCharacterId) {\r\n\t\t\t\tsetDetailedWordId(backCharacterId);\r\n\t\t\t\tsetBackCharacterId(undefined);\r\n\t\t\t} else {\r\n\t\t\t\tsetDetailedWordId(undefined);\r\n\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\tdocument.documentElement.scrollTop = scrollTopRef.current;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getWordById(id: string): Word {\r\n\t\t// check if word is in the results because the set is smaller than all words\r\n\t\tconst wordFromResults = results.find((word) => word.id === id);\r\n\t\tif (wordFromResults) {\r\n\t\t\treturn wordFromResults;\r\n\t\t} else {\r\n\t\t\t// check if word is in set of all words\r\n\t\t\tconst wordFromAllWords = words.find((word) => word.id === id);\r\n\t\t\tif (wordFromAllWords) {\r\n\t\t\t\treturn wordFromAllWords;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`Word for id ${id} not found`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"filter-page\">\r\n\t\t\t\t{renderPageFilters()}\r\n\t\t\t\t<div className=\"words\">{detailedWordId ? renderDetailedWord() : renderResults()} </div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n"],"sourceRoot":""}